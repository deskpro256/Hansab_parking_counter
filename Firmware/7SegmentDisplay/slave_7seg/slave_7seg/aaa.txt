/*
SLAVE WITH 7SEG DISPLAY
*/

#include <avr/io.h>
#define F_CPU 16000000UL

int state[3][3] {
  {0, 0, 1},
  {0, 1, 0},
  {1, 0, 0}
};

int numbers[16][4] = {
  {0, 0, 0, 0},   // 0
  {0, 0, 0, 1},   // 1
  {0, 0, 1, 0},   // 2
  {0, 0, 1, 1},   // 3
  {0, 1, 0, 0},   // 4
  {0, 1, 0, 1},   // 5
  {0, 1, 1, 0},   // 6
  {0, 1, 1, 1},   // 7
  {1, 0, 0, 0},   // 8
  {1, 0, 0, 1}    // 9
  {1, 1, 0, 1},   // L
  {1, 1, 1, 0},   // H
  {1, 1, 1, 1},   // P
  {1, 1, 0, 1},   // A
  {1, 1, 1, 0}    // -
  {1, 1, 1, 1}    // BLANK
};

int bcd[3] = {};
int a, b, c, i = 0;
int digit[3] = {};
int count = 100;

unsigned long currentMillis = 0;
unsigned long previousMillis = 0;
const long interval = 1000;
char test = 0;

void setup() {
  Serial.begin(57600);
  
  pinMode(4, OUTPUT); //led
  
  pinMode(5, OUTPUT); //001		COM_3
  pinMode(6, OUTPUT); //010		COM_2
  pinMode(7, OUTPUT); //100		COM_1

  pinMode(8, OUTPUT);     // A
  pinMode(9, OUTPUT);     // B
  pinMode(10, OUTPUT);    // C
  pinMode(11, OUTPUT);    // D

}

void loop() {
  i = 0;
  while (i <= 2) {

    a = count / 100;        //simti
    b = (count % 100) / 10; //desmiti
    c = count % 10;         //vieni

    digit[0] = c;
    digit[1] = b;
    digit[2] = a;

    bcd[0] = numbers[digit[i]][0];
    bcd[1] = numbers[digit[i]][1];
    bcd[2] = numbers[digit[i]][2];
    bcd[3] = numbers[digit[i]][3];

    digitalWrite(5, state[i][2]);
    digitalWrite(6, state[i][1]);
    digitalWrite(7, state[i][0]);

    digitalWrite(11 , bcd[0]);
    digitalWrite(10 , bcd[1]);
    digitalWrite(9 , bcd[2]);
    digitalWrite(8 , bcd[3]);

    i++;
  }
}